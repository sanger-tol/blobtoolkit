Changes in module 'nf-core/cat/cat'
--- modules/nf-core/cat/cat/main.nf
+++ modules/nf-core/cat/cat/main.nf
@@ -22,6 +22,8 @@
     def args2 = task.ext.args2 ?: ''
     def file_list = files_in.collect { it.toString() }
 
+    // choose appropriate concatenation tool depending on input and output format
+
     // | input     | output     | command1 | command2 |
     // |-----------|------------|----------|----------|
     // | gzipped   | gzipped    | cat      |          |
@@ -30,7 +32,7 @@
     // | ungzipped | gzipped    | cat      | pigz     |
 
     // Use input file ending as default
-    prefix   = task.ext.prefix ?: "${meta.id}${file_list[0].substring(file_list[0].lastIndexOf('.'))}"
+    prefix   = task.ext.prefix ?: "${meta.id}${getFileSuffix(file_list[0])}"
     out_zip  = prefix.endsWith('.gz')
     in_zip   = file_list[0].endsWith('.gz')
     command1 = (in_zip && !out_zip) ? 'zcat' : 'cat'
@@ -68,3 +70,10 @@
     END_VERSIONS
     """
 }
+
+// for .gz files also include the second to last extension if it is present. E.g., .fasta.gz
+def getFileSuffix(filename) {
+    def match = filename =~ /^.*?((\.\w{1,5})?(\.\w{1,5}\.gz$))/
+    return match ? match[0][1] : filename.substring(filename.lastIndexOf('.'))
+}
+

************************************************************
