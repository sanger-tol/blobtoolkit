/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    sanger-tol/blobtoolkit Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Specify your pipeline's command line flags
    // Input options
    input                      = null
    align                      = false
    mask                       = false
    fetchngs_samplesheet       = false
    busco_lineages             = null
    precomputed_busco          = null
    busco_gene_predictor       = null

    // Reference options
    fasta                      = null
    accession                  = null
    taxon                      = null

    // Output options
    image_format               = 'png'

    // Databases and related options
    taxdump                    = null
    busco                      = null
    // Taken from https://busco-data.ezlab.org/v5/data/placement_files/mapping_taxids-busco_dataset_name.*.2019-12-16.txt.tar.gz
    lineage_tax_ids            = "${projectDir}/assets/mapping_taxids-busco_dataset_name.2019-12-16.txt"
    blastp                     = null
    blastx                     = null
    blastn                     = null
    skip_taxon_filtering       = false

    // Execution options
    use_work_dir_as_temp        = false

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = 'results'
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    help_full                  = false
    show_hidden                = false
    version                    = false
    trace_report_suffix        = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    cleanup   { cleanup = true                        }
    test      { includeConfig 'conf/test.config'      }
    test_raw  { includeConfig 'conf/test_raw.config'  }
    test_full { includeConfig 'conf/test_full.config' }
    test_nobusco { includeConfig 'conf/test_nobusco.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load sanger-tol/blobtoolkit custom profiles from different institutions.
// Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/blobtoolkit.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/blobtoolkit/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/blobtoolkit/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/blobtoolkit/execution_trace_${params.trace_report_suffix}.txt"
    fields  = 'task_id,hash,native_id,process,tag,status,exit,cpus,memory,time,attempt,submit,start,complete,duration,%cpu,%mem,peak_rss,rchar,wchar'
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/blobtoolkit/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'sanger-tol/blobtoolkit'
    author          = """Muffato, Matthieu""" // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
    contributors    = [
        [
            name: 'Butt, Zaynab',
            affiliation: 'Wellcome Sanger Institute',
            github: 'https://github.com/zb32',
            contribution: ['contributor'],
            orcid: 'https://orcid.org/0009-0009-7934-8440'
        ],
        [
            name: 'Chafin, Tyler',
            affiliation: 'Wellcome Sanger Institute',
            github: 'https://github.com/tkchafin',
            contribution: ['contributor'],
            orcid: 'https://orcid.org/0000-0001-8687-5905'
        ],
        [
            name: 'Challis, Rich',
            affiliation: 'Wellcome Sanger Institute',
            github: 'https://github.com/rjchallis',
            contribution: ['author'],
            orcid: 'https://orcid.org/0000-0002-3502-112'
        ],
        [
            name: 'Kumar, Sujai',
            affiliation: 'Wellcome Sanger Institute',
            github: 'https://github.com/sujaikumar',
            contribution: ['author'],
            orcid: 'https://orcid.org/0000-0001-5902-6641'
        ],
        [
            name: 'Muffato, Matthieu',
            affiliation: 'Wellcome Sanger Institute',
            github: 'https://github.com/muffato',
            contribution: ['author', 'maintainer'],
            orcid: 'https://orcid.org/0000-0002-7860-3560'
        ],
        [
            name: 'Qi, Guoying',
            affiliation: 'Wellcome Sanger Institute',
            github: 'https://github.com/gq1',
            contribution: ['contributor'],
            orcid: 'https://orcid.org/0000-0003-1262-8973'
        ],
        [
            name: 'Ramos Díaz, Alexander',
            github: 'https://github.com/alxndrdiaz',
            contribution: ['author'],
            orcid: 'https://orcid.org/0000-0001-6410-3349'
        ],
        [
            name: 'Surana, Priyanka',
            affiliation: 'Wellcome Sanger Institute',
            github: 'https://github.com/priyanka-surana',
            contribution: ['author'],
            orcid: 'https://orcid.org/0000-0002-7167-0875'
        ],
        [
            name: 'Yates, Bethan',
            affiliation: 'Wellcome Sanger Institute',
            github: 'https://github.com/BethYates',
            contribution: ['contributor'],
            orcid: 'https://orcid.org/0000-0003-1658-1762'
        ],
    ]
    homePage        = 'https://github.com/sanger-tol/blobtoolkit'
    description     = """Quality assessment of genome assemblies"""
    mainScript      = 'main.nf'
    defaultBranch   = 'main'
    nextflowVersion = '!>=24.04.2'
    version         = '0.7.1'
    doi             = '10.5281/zenodo.7949058'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.2.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run sanger-tol/blobtoolkit -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
\033[0;34m   _____                               \033[0;32m _______   \033[0;31m _\033[0m
\033[0;34m  / ____|                              \033[0;32m|__   __|  \033[0;31m| |\033[0m
\033[0;34m | (___   __ _ _ __   __ _  ___ _ __ \033[0m ___ \033[0;32m| |\033[0;33m ___ \033[0;31m| |\033[0m
\033[0;34m  \\___ \\ / _` | '_ \\ / _` |/ _ \\ '__|\033[0m|___|\033[0;32m| |\033[0;33m/ _ \\\033[0;31m| |\033[0m
\033[0;34m  ____) | (_| | | | | (_| |  __/ |        \033[0;32m| |\033[0;33m (_) \033[0;31m| |____\033[0m
\033[0;34m |_____/ \\__,_|_| |_|\\__, |\\___|_|        \033[0;32m|_|\033[0;33m\\___/\033[0;31m|______|\033[0m
\033[0;34m                      __/ |\033[0m
\033[0;34m                     |___/\033[0m
\033[0;35m  ${manifest.name} ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "\n* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "    https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x
* Software dependencies
    https://github.com/sanger-tol/blobtoolkit/blob/main/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Increasing the number of CPUs often gives diminishing returns, so we increase it
    following a logarithm curve:
        - 0      < value <= 1     : start + step
        - 1      < value <= base  : start + 2*step
        - base   < value <= base^2: start + 3*step
        - base^2 < value <= base^3: start + 4*step
        - etc
    In order to support re-runs, start and/or step may be increased by a function of the
    attempt number prior to calling this function.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

// Modified logarithm function that doesn't return negative numbers
def positive_log(value, base) {
    if (value <= 1) {
        return 0
    } else {
        return Math.log(value)/Math.log(base)
    }
}

def log_increase_cpus(start, step, value, base) {
    return start + step * (1 + Math.ceil(positive_log(value, base)))
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
